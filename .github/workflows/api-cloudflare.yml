name: api-with-cloudflare-named-tunnel
on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/api-cloudflare.yml"
      - "app/**"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    permissions:
      contents: read
    env:
      PORT: 3000
      DOCKER_IMAGE: thanhtai195/latex-builder-1.0:latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cloudflared
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb || sudo apt-get -f install -y

      - name: Pull public Docker image
        run: |
          docker pull "$DOCKER_IMAGE" || true
          docker images | head -n 5

      - name: Start app container from pulled image
        run: |
          # Dừng & xóa container cũ nếu có
          docker rm -f api-container 2>/dev/null || true
          # Chạy container từ image public
          docker run -d --name api-container \
            -e PORT=$PORT \
            -p $PORT:$PORT \
            "$DOCKER_IMAGE"

          echo "Waiting for app to listen on :$PORT ..."
          for i in $(seq 1 30); do
            if ss -lntp | grep -q ":$PORT"; then
              echo "App is listening on port $PORT"
              break
            fi
            sleep 1
          done
          # Nếu chưa nghe cổng thì in log và fail
          ss -lntp | grep ":$PORT" || (echo "App not listening on $PORT"; docker logs --tail=200 api-container; exit 1)

      - name: Run Cloudflare Named Tunnel
        env:
          CF_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
        run: |
          nohup cloudflared tunnel --no-autoupdate run --token "$CF_TUNNEL_TOKEN" > cftunnel.log 2>&1 &
          sleep 2
          echo "Tunnel started."
          tail -n +1 cftunnel.log | sed -n '1,120p'

      - name: Keep alive for 5 hours
        run: sleep $((5 * 60 * 60))
